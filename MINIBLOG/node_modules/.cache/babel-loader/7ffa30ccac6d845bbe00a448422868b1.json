{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo\\\\Documents\\\\JS\\\\react\\\\MINIBLOG\\\\miniblog\\\\src\\\\pages\\\\CreatePost\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./CreatePost.module.css\";\nimport { useState } from \"react\";\nimport { useInsertDocument } from \"../../hooks/useInsertDocument\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuthValue } from \"../../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = () => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [formError, setFormError] = useState(\"\");\n  const {\n    user\n  } = useAuthValue();\n  const navigate = useNavigate();\n  const {\n    insertDocument,\n    response\n  } = useInsertDocument(\"posts\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormError(\"\"); // validate image\n\n    try {\n      new URL(image);\n    } catch (error) {\n      setFormError(\"A imagem precisa ser uma URL.\");\n    } // create tags array\n\n\n    const tagsArray = tags.split(\",\").map(tag => tag.trim().toLowerCase()); // check values\n\n    if (!title || !image || !tags || !body) {\n      setFormError(\"Por favor, preencha todos os campos!\");\n    }\n\n    console.log(tagsArray);\n    console.log({\n      title,\n      image,\n      body,\n      tags: tagsArray,\n      uid: user.uid,\n      createdBy: user.displayName\n    });\n    if (formError) return;\n    insertDocument({\n      title,\n      image,\n      body,\n      tags: tagsArray,\n      uid: user.uid,\n      createdBy: user.displayName\n    }); // redirect to home page\n\n    navigate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.create_post,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Criar post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Escreva sobre o que quiser e compartilhe o seu conhecimento!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"T\\xEDtulo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"text\",\n          required: true,\n          placeholder: \"Pense num bom t\\xEDtulo...\",\n          onChange: e => setTitle(e.target.value),\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"URL da imagem:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"image\",\n          required: true,\n          placeholder: \"Insira uma imagem que representa seu post\",\n          onChange: e => setImage(e.target.value),\n          value: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Conte\\xFAdo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"body\",\n          required: true,\n          placeholder: \"Insira o conte\\xFAdo do post\",\n          onChange: e => setBody(e.target.value),\n          value: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Tags:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"tags\",\n          required: true,\n          placeholder: \"Insira as tags separadas por v\\xEDrgula\",\n          onChange: e => setTags(e.target.value),\n          value: tags\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), !response.loading && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Criar post!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 31\n      }, this), response.loading && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        disabled: true,\n        children: \"Aguarde.. .\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), (response.error || formError) && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: response.error || formError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePost, \"5owiytaQKu8BdBIJ6OMx4aqWOdA=\", false, function () {\n  return [useAuthValue, useNavigate, useInsertDocument];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["C:/Users/Eduardo/Documents/JS/react/MINIBLOG/miniblog/src/pages/CreatePost/CreatePost.js"],"names":["styles","useState","useInsertDocument","useNavigate","useAuthValue","CreatePost","title","setTitle","image","setImage","body","setBody","tags","setTags","formError","setFormError","user","navigate","insertDocument","response","handleSubmit","e","preventDefault","URL","error","tagsArray","split","map","tag","trim","toLowerCase","console","log","uid","createdBy","displayName","create_post","target","value","loading"],"mappings":"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","sourcesContent":["import styles from \"./CreatePost.module.css\";\n\nimport { useState } from \"react\";\nimport { useInsertDocument } from \"../../hooks/useInsertDocument\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuthValue } from \"../../contexts/AuthContext\";\n\nconst CreatePost = () => {\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [formError, setFormError] = useState(\"\");\n\n  const { user } = useAuthValue();\n\n  const navigate = useNavigate();\n\n  const { insertDocument, response } = useInsertDocument(\"posts\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormError(\"\");\n\n    // validate image\n    try {\n      new URL(image);\n    } catch (error) {\n      setFormError(\"A imagem precisa ser uma URL.\");\n    }\n\n    // create tags array\n    const tagsArray = tags.split(\",\").map((tag) => tag.trim().toLowerCase());\n\n    // check values\n    if (!title || !image || !tags || !body) {\n      setFormError(\"Por favor, preencha todos os campos!\");\n    }\n\n    console.log(tagsArray);\n\n    console.log({\n      title,\n      image,\n      body,\n      tags: tagsArray,\n      uid: user.uid,\n      createdBy: user.displayName,\n    });\n\n    if(formError) return\n\n    insertDocument({\n      title,\n      image,\n      body,\n      tags: tagsArray,\n      uid: user.uid,\n      createdBy: user.displayName,\n    });\n\n    // redirect to home page\n    navigate(\"/\");\n  };\n\n  return (\n    <div className={styles.create_post}>\n      <h2>Criar post</h2>\n      <p>Escreva sobre o que quiser e compartilhe o seu conhecimento!</p>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <span>Título:</span>\n          <input\n            type=\"text\"\n            name=\"text\"\n            required\n            placeholder=\"Pense num bom título...\"\n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n          />\n        </label>\n        <label>\n          <span>URL da imagem:</span>\n          <input\n            type=\"text\"\n            name=\"image\"\n            required\n            placeholder=\"Insira uma imagem que representa seu post\"\n            onChange={(e) => setImage(e.target.value)}\n            value={image}\n          />\n        </label>\n        <label>\n          <span>Conteúdo:</span>\n          <textarea\n            name=\"body\"\n            required\n            placeholder=\"Insira o conteúdo do post\"\n            onChange={(e) => setBody(e.target.value)}\n            value={body}\n          ></textarea>\n        </label>\n        <label>\n          <span>Tags:</span>\n          <input\n            type=\"text\"\n            name=\"tags\"\n            required\n            placeholder=\"Insira as tags separadas por vírgula\"\n            onChange={(e) => setTags(e.target.value)}\n            value={tags}\n          />\n        </label>\n        {!response.loading && <button className=\"btn\">Criar post!</button>}\n        {response.loading && (\n          <button className=\"btn\" disabled>\n            Aguarde.. .\n          </button>\n        )}\n        {(response.error || formError) && (\n          <p className=\"error\">{response.error || formError}</p>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default CreatePost;\n"]},"metadata":{},"sourceType":"module"}