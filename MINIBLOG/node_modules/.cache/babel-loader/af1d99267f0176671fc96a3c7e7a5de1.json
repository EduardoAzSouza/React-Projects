{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo\\\\Documents\\\\JS\\\\react\\\\MINIBLOG\\\\miniblog\\\\src\\\\pages\\\\EditPost\\\\EditPost.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./EditPost.module.css\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useAuthValue } from \"../../contexts/AuthContext\";\nimport { useFetchDocument } from \"../../hooks/useFetchDocument\";\nimport { useUpdateDocument } from \"../../hooks/useUpdateDocument\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditPost = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    document: post\n  } = useFetchDocument(\"posts\", id);\n  console.log(post);\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [formError, setFormError] = useState(\"\"); // fill form data\n\n  useEffect(() => {\n    if (post) {\n      setTitle(post.title);\n      setImage(post.image);\n      setBody(post.body);\n      const textTags = post.tags.join(\", \");\n      setTags(textTags);\n    }\n  }, [post]);\n  const {\n    user\n  } = useAuthValue();\n  const navigate = useNavigate();\n  const {\n    updateDocument,\n    response\n  } = useUpdateDocument(\"posts\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormError(\"\"); // validate image\n\n    try {\n      new URL(image);\n    } catch (error) {\n      setFormError(\"A imagem precisa ser uma URL.\");\n    } // create tags array\n\n\n    const tagsArray = tags.split(\",\").map(tag => tag.trim());\n    console.log(tagsArray);\n    console.log({\n      title,\n      image,\n      body,\n      tags: tagsArray\n    });\n    const data = {\n      title,\n      image,\n      body,\n      tags: tagsArray\n    };\n    console.log(post);\n    updateDocument(id, data); // redirect to home page\n\n    navigate(\"/dashboard\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.edit_post,\n    children: post && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Editando post: \", post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Altere os dados do post como desejar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"T\\xEDtulo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"text\",\n            required: true,\n            placeholder: \"Pense num bom t\\xEDtulo...\",\n            onChange: e => setTitle(e.target.value),\n            value: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"URL da imagem:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"image\",\n            required: true,\n            placeholder: \"Insira uma imagem que representa seu post\",\n            onChange: e => setImage(e.target.value),\n            value: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.preview_title,\n          children: \"Preview da imagem atual:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.image_preview,\n          src: post.image,\n          alt: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Conte\\xFAdo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"body\",\n            required: true,\n            placeholder: \"Insira o conte\\xFAdo do post\",\n            onChange: e => setBody(e.target.value),\n            value: body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Tags:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"tags\",\n            required: true,\n            placeholder: \"Insira as tags separadas por v\\xEDrgula\",\n            onChange: e => setTags(e.target.value),\n            value: tags\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), !response.loading && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 35\n        }, this), response.loading && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          disabled: true,\n          children: \"Aguarde.. .\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), (response.error || formError) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: response.error || formError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPost, \"n1BIWodNVAyR+pv+7Id9zoHLjbs=\", false, function () {\n  return [useParams, useFetchDocument, useAuthValue, useNavigate, useUpdateDocument];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["C:/Users/Eduardo/Documents/JS/react/MINIBLOG/miniblog/src/pages/EditPost/EditPost.js"],"names":["styles","useState","useEffect","useNavigate","useParams","useAuthValue","useFetchDocument","useUpdateDocument","EditPost","id","document","post","console","log","title","setTitle","image","setImage","body","setBody","tags","setTags","formError","setFormError","textTags","join","user","navigate","updateDocument","response","handleSubmit","e","preventDefault","URL","error","tagsArray","split","map","tag","trim","data","edit_post","target","value","preview_title","image_preview","loading"],"mappings":"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","sourcesContent":["import styles from \"./EditPost.module.css\";\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useAuthValue } from \"../../contexts/AuthContext\";\nimport { useFetchDocument } from \"../../hooks/useFetchDocument\";\nimport { useUpdateDocument } from \"../../hooks/useUpdateDocument\";\n\nconst EditPost = () => {\n  const { id } = useParams();\n  const { document: post } = useFetchDocument(\"posts\", id);\n\n  console.log(post);\n\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [formError, setFormError] = useState(\"\");\n\n  // fill form data\n  useEffect(() => {\n    if (post) {\n      setTitle(post.title);\n      setImage(post.image);\n      setBody(post.body);\n\n      const textTags = post.tags.join(\", \");\n\n      setTags(textTags);\n    }\n  }, [post]);\n\n  const { user } = useAuthValue();\n\n  const navigate = useNavigate();\n\n  const { updateDocument, response } = useUpdateDocument(\"posts\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormError(\"\");\n\n    // validate image\n    try {\n      new URL(image);\n    } catch (error) {\n      setFormError(\"A imagem precisa ser uma URL.\");\n    }\n\n    // create tags array\n    const tagsArray = tags.split(\",\").map((tag) => tag.trim());\n\n    console.log(tagsArray);\n\n    console.log({\n      title,\n      image,\n      body,\n      tags: tagsArray,\n    });\n\n    const data = {\n      title,\n      image,\n      body,\n      tags: tagsArray,\n    };\n\n    console.log(post);\n\n    updateDocument(id, data);\n\n    // redirect to home page\n    navigate(\"/dashboard\");\n  };\n\n  return (\n    <div className={styles.edit_post}>\n      {post && (\n        <>\n          <h2>Editando post: {post.title}</h2>\n          <p>Altere os dados do post como desejar</p>\n          <form onSubmit={handleSubmit}>\n            <label>\n              <span>Título:</span>\n              <input\n                type=\"text\"\n                name=\"text\"\n                required\n                placeholder=\"Pense num bom título...\"\n                onChange={(e) => setTitle(e.target.value)}\n                value={title}\n              />\n            </label>\n            <label>\n              <span>URL da imagem:</span>\n              <input\n                type=\"text\"\n                name=\"image\"\n                required\n                placeholder=\"Insira uma imagem que representa seu post\"\n                onChange={(e) => setImage(e.target.value)}\n                value={image}\n              />\n            </label>\n            <p className={styles.preview_title}>Preview da imagem atual:</p>\n            <img\n              className={styles.image_preview}\n              src={post.image}\n              alt={post.title}\n            />\n            <label>\n              <span>Conteúdo:</span>\n              <textarea\n                name=\"body\"\n                required\n                placeholder=\"Insira o conteúdo do post\"\n                onChange={(e) => setBody(e.target.value)}\n                value={body}\n              ></textarea>\n            </label>\n            <label>\n              <span>Tags:</span>\n              <input\n                type=\"text\"\n                name=\"tags\"\n                required\n                placeholder=\"Insira as tags separadas por vírgula\"\n                onChange={(e) => setTags(e.target.value)}\n                value={tags}\n              />\n            </label>\n            {!response.loading && <button className=\"btn\">Editar</button>}\n            {response.loading && (\n              <button className=\"btn\" disabled>\n                Aguarde.. .\n              </button>\n            )}\n            {(response.error || formError) && (\n              <p className=\"error\">{response.error || formError}</p>\n            )}\n          </form>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default EditPost;\n"]},"metadata":{},"sourceType":"module"}